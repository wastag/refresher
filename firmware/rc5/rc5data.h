//////////////////////////////////////////////////////////////////////////
/// \file rc5data.h
///
/// \brief Header file
///
///    All rights released
///
/// \author Jacek Wastag    jwastag@gmail.com
///
//////////////////////////////////////////////////////////////////////////

#ifndef RC5DATA_H_
#define RC5DATA_H_

#include "hardwareconfig.h"
#include <avr/io.h>

//////////////////////////////////////////////////////////////////////////
/// \brief Device's default address
//////////////////////////////////////////////////////////////////////////
#define DEFAULT_DEVICE_ADDRESS    	0

//////////////////////////////////////////////////////////////////////////
/// \brief Definition of logical one in manchaster code
//////////////////////////////////////////////////////////////////////////
#define LOGIC_ONE            0x2

#define SINGLE_RC5_BIT_MASK  0x3
#define TOGGLE_BIT_MASK      0x800
#define TOGGLE_SHIFT         11
#define DEVICE_ADDRESS_MASK  0x7C0
#define ADDRESS_SHIFT        6
#define COMMAND_MASK         0x3F

//////////////////////////////////////////////////////////////////////////
/// \brief RC5 frame decoding errors enumeration
//////////////////////////////////////////////////////////////////////////
enum decodingErrors
{
    RC5_DECODING_OK,
    RC5_DECODING_FRAME_ERROR,	
};

//////////////////////////////////////////////////////////////////////////
/// \brief RC5 status data container
//////////////////////////////////////////////////////////////////////////
typedef struct
{
    uint8_t deviceAddress;
    uint8_t rc5DecoderEnabled   :1;
    uint8_t                     :7;
} sRC5DecoderStatus_t;

#endif /* RC5DATA_H_ */
